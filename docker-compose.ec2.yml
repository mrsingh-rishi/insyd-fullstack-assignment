services:
  frontend:
    build: ./frontend
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:5001
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - '5001:5000'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@database:5432/notifications
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure

  database:
    image: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: notifications
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d notifications"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  nginx:
    image: nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

