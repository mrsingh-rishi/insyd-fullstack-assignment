services:
  frontend:
    build: 
      context: ./frontend
      target: production
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BACKEND_URL=http://localhost
    depends_on:
      - backend

  backend:
    build: 
      context: ./backend
      target: production
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://user:password@database:5432/notifications
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost
    depends_on:
      - database
      - redis

  database:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: notifications
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
